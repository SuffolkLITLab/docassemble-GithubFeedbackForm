modules:
  - .github_issue
---
objects:
  - red: DARedis
---
mandatory: True
code: |
  feedback_id
  feedback_info
---
event: feedback_info
question: Feedback Info
subquestion: |
  ## Body
  ${ id_map[feedback_id]['body'] }

  ## Github URL
  ${ id_map[feedback_id]['html_url'] }

  ## Session ID
  ${ id_map[feedback_id]['interview'] }:${ id_map[feedback_id]['session_id'] }

  ${ action_button_html(url_action('open_session'), label='Open Session', color='secondary') }
---
metadata:
  title: Browse Feedback Sessions
  short title: Browse Feedback
  temporary session: True
  required privileges:
    - admin
---
if: ids
id: main browse screen
question: |
  Select a feedback session to browse
fields:
  - Feedback Session: feedback_id
    datatype: dropdown
    choices:
      code: |
        ids
help:
  label: |
    View Panelists
  content: |
    ${ view_panelists }
---
template: view_panelists
content: |
    % for email_and_time in potential_panelists():
    % if isinstance(email_and_time[0], bytes):
    * ${ email_and_time[0].decode('utf-8') }, at ${ email_and_time[1]}
    % else:
    * ${ str(panelist_email) }, at ${ email_and_time[1]}
    % endif
    % endfor
---
if: not ids
question: |
  No feedback sessions to view
event: feedback_id
help:
  label: |
    View Panelists
  content: |
    ${ view_panelists }
---
code: |
  id_map = get_all_session_info()
---
code: |
  ids = {row_id: info['html_url'] if info.get('html_url') else info.get('session_id') for row_id, info in id_map.items()}
---
event: open_session
code: |
  info = id_map[feedback_id]
  response(url=interview_url(i=info['interview'], session=info['session_id'], temporary=1))
